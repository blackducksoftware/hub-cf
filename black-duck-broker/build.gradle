plugins {
	id 'application'
	id 'eclipse-wtp'
	id 'jacoco'
	id 'com.github.kt3k.coveralls' version '2.8.1'
}

sourceCompatibility = 1.8
mainClassName = 'com.blackducksoftware.integration.cloudfoundry.BDServiceBrokerApplication'

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web') {
	  exclude group: 'org.apache.tomcat', module: 'tomcat-annotations-api'
    exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-el'
    exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-core'
    exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
	}
	compile('org.apache.tomcat:tomcat-annotations-api:8.5.32') // Update version based on Co-Pilot report
	compile('org.apache.tomcat.embed:tomcat-embed-el:8.5.32') // Update version based on Co-Pilot report
	compile('org.apache.tomcat.embed:tomcat-embed-core:8.5.32') // Update version based on Co-Pilot report
	compile('org.apache.tomcat.embed:tomcat-embed-websocket:8.5.32') // Update version based on Co-Pilot report
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.RELEASE') {
	  exclude group: 'org.springframework.security.oauth', module: 'spring-security-oauth2'
	}
	compile('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE') // Update version based on Co-Pilot report
	compile('org.springframework.boot:spring-boot-configuration-processor')
	compile('org.apache.httpcomponents:httpclient:4.5.5')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8')
	compile('com.fasterxml.jackson.module:jackson-modules-java8:2.9.8')
	compile('com.google.code.findbugs:jsr305:3.0.2')
	compile('org.cloudfoundry:cloudfoundry-client-reactor:3.12.0.RELEASE') {
	  exclude group: 'org.apache.commons', module: 'commons-compress'
	}
	compile('org.apache.commons:commons-compress:1.18') // Update version based on Co-Pilot report
	testCompile('org.springframework.boot:spring-boot-starter-test') { 
		exclude group: 'junit', module: 'junit'
	}
	testCompile('org.testng:testng:6.11')
}

test{
  useTestNG() {
    listeners << 'org.testng.reporters.XMLReporter'
  }
}

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
  with copySpec {
    from 'src/main/resources'
    include '**/application*.yml'
    include '**/application*.yaml'
    include '**/application*.properties'
    project.properties.findAll().each {
      prop ->
        if (prop.key != 'properties' && prop.value != null) {
          filter(ReplaceTokens, tokens: [ (prop.key): prop.value])
          filter(ReplaceTokens, tokens: [ ('project.' + prop.key): prop.value])
        }
    }
  }
}

jacocoTestReport {
	reports { xml.enabled = true }
}
