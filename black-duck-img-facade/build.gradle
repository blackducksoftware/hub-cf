plugins {
  id 'application'
  id 'eclipse-wtp'
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.8.1'
}

ext {
  dkrLabelCommit = project.hasProperty('dkrLabelCommit') ? dkrLabelCommit : '--empty--'
  dkrLabelDate = project.hasProperty('dkrLabelDate') ? dkrLabelDate : '--empty--'
  dkrLabelVersion = project.hasProperty('dkrLabelVersion') ? dkrLabelVersion : version
}

sourceCompatibility = 1.8
mainClassName = 'com.blackducksoftware.integration.cloudfoundry.imagefacade.BDServiceBrokerImageFacade'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-web') 
//  compile('org.apache.tomcat:tomcat-annotations-api:8.5.32') // Update version based on Co-Pilot report
//  compile('org.apache.tomcat.embed:tomcat-embed-el:8.5.32') // Update version based on Co-Pilot report
//  compile('org.apache.tomcat.embed:tomcat-embed-core:8.5.32') // Update version based on Co-Pilot report
//  compile('org.apache.tomcat.embed:tomcat-embed-websocket:8.5.32') // Update version based on Co-Pilot report
  compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.8.RELEASE') {
    exclude group: 'org.springframework.security.oauth', module: 'spring-security-oauth2'
    exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
  }
  compile('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE') // Update version based on Co-Pilot report
  compile('org.bouncycastle:bcprov-jdk15on:1.60') // Update version based on Co-Pilot report
  compile('org.springframework.boot:spring-boot-configuration-processor')
  compile('org.apache.httpcomponents:httpclient:4.5.5')
  compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8')
  compile('com.fasterxml.jackson.module:jackson-modules-java8:2.9.8')
  compile('com.google.code.findbugs:jsr305:3.0.2')
  compile('org.cloudfoundry:cloudfoundry-client-reactor:3.13.0.RELEASE')
  compile('org.cloudfoundry:cloudfoundry-operations:3.13.0.RELEASE') {
    exclude group: 'org.apache.commons', module: 'commons-compress'
  }
  compile('org.apache.commons:commons-compress:1.18') // Update version based on Co-Pilot report
  
  testCompile('org.springframework.boot:spring-boot-starter-test') { 
    exclude group: 'junit', module: 'junit'
  }
  testCompile('org.testng:testng:6.11')
}

test{
  useTestNG() {
    listeners << 'org.testng.reporters.XMLReporter'
  }
}

jacocoTestReport {
  reports { xml.enabled = true }
}

def dockerResourcesDir = "${projectDir}"

task dockerBuild(type: Exec, dependsOn: assemble) {
  group 'Publishing'
  description 'Generate a docker image'
 
  // Convert any '-' to '_' so pivotal can run 'docker load' correctly
  def tagversion = "${version}"
  tagversion = tagversion.replaceAll(/\-/, '_')
  
  executable = 'docker'
  args = ['build',
          '--pull',
          "--build-arg=version=${version}",
          "--build-arg=LASTCOMMIT=${dkrLabelCommit}",
          "--build-arg=BUILDTIME=${dkrLabelDate}",
          "--build-arg=VERSION=${dkrLabelVersion}",
          "${dockerResourcesDir}",
          "--tag=blackducksoftware/image_facade_cf:${tagversion}"]
}
